[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:289:1: 300:2'
source = '''
impl<T: ?Sized> Drop for WideRwLock<T> {
    #[inline]
    fn drop(&mut self) {
        if !self.ptr.is_null() {
            unsafe {
                let layout = Layout::from_size_align(9 * 64, 64).unwrap(); //aligned to cache line
                alloc::dealloc(self.ptr as *mut u8, layout);
            }
            self.ptr = ptr::null_mut();
        }
    }
}'''
