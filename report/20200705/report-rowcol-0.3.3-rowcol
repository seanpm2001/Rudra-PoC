[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/vector.rs:750:1: 756:2'
source = '''
impl<T, N> Drop for IntoIter<T, N> where N: ArrayLen<T> {
    fn drop(&mut self) {
        for i in self.next..self.back {
            mem::drop(unsafe { ptr::read(self.arr.as_ref().get_unchecked(i)) });
        }
    }
}'''
