[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/tree_bitmap/allocator.rs:44:1: 50:2'
source = '''
impl<T> Drop for RawVec<T> {
    fn drop(&mut self) {
        unsafe {
            Vec::from_raw_parts(self.mem, 0, self.cap);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/tree_bitmap/mod.rs:645:1: 655:2'
source = '''
impl<T> Drop for TreeBitmap<T> {
    fn drop(&mut self) {
        if self.should_drop {
            for (_, _, item) in self.iter() {
                unsafe {
                    ptr::read(item);
                }
            }
        }
    }
}'''
