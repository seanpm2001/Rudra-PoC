[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:802:1: 813:2'
source = '''
impl<'a, M> Drop for PooledConnection<'a, M>
where
    M: ManageConnection,
{
    fn drop(&mut self) {
        futures::executor::block_on(async {
            self.pool
                .put_back(self.checkout, self.conn.take().unwrap().conn)
                .await;
        })
    }
}'''
