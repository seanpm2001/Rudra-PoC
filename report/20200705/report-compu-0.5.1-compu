[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/encoder/brotli.rs:140:1: 146:2'
source = '''
impl Drop for BrotliEncoder {
    fn drop(&mut self) {
        unsafe {
            sys::BrotliEncoderDestroyInstance(self.state);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/encoder/zlib.rs:215:1: 227:2'
source = '''
impl Drop for ZlibEncoder {
    fn drop(&mut self) {
        unsafe {
            #[cfg(feature = "zlib-opt")]
            sys::deflateEnd(&mut self.state);

            #[cfg(not(feature = "zlib-opt"))]
            sys::deflateEnd(self.state);
            #[cfg(not(feature = "zlib-opt"))]
            Box::from_raw(self.state);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/decoder/brotli.rs:82:1: 88:2'
source = '''
impl Drop for BrotliDecoder {
    fn drop(&mut self) {
        unsafe {
            sys::BrotliDecoderDestroyInstance(self.state);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/decoder/zlib.rs:154:1: 166:2'
source = '''
impl Drop for ZlibDecoder {
    fn drop(&mut self) {
        unsafe {
            #[cfg(feature = "zlib-opt")]
            sys::inflateEnd(&mut self.state);

            #[cfg(not(feature = "zlib-opt"))]
            sys::inflateEnd(self.state);
            #[cfg(not(feature = "zlib-opt"))]
            Box::from_raw(self.state);
        }
    }
}'''
