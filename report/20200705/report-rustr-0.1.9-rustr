[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/protect/stackp.rs:37:1: 46:2'
source = '''
impl Drop for Shield {
    fn drop(&mut self) {
        unsafe {
            // println!("{:?}", "droping \n");
            if self.t != R_NilValue {
                Rf_unprotect(1)
            };
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/protect/indexp.rs:49:1: 57:2'
source = '''
impl Drop for Armor {
    fn drop(&mut self) {
        unsafe {
            if self.index >= 0 {
                Rf_unprotect(1);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/protect/countp.rs:37:1: 41:2'
source = '''
impl Drop for Shelter {
    fn drop(&mut self) {
        unsafe { Rf_unprotect(self.nprotected) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/storage.rs:97:1: 104:2'
source = '''
impl Drop for Preserve {
    fn drop(&mut self) {
        unsafe {
            rustr_release_object(self.data);
            self.data = R_NilValue;
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/storage.rs:176:1: 184:2'
source = '''
impl Drop for NoProtect {
    fn drop(&mut self) {

        unsafe {
            self.data = R_NilValue;
        }

    }
}'''
