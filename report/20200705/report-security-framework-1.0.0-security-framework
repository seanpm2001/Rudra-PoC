[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/secure_transport.rs:982:1: 991:2'
source = '''
impl<S> Drop for SslStream<S> {
    fn drop(&mut self) {
        unsafe {
            let mut conn = ptr::null();
            let ret = SSLGetConnection(self.ctx.0, &mut conn);
            assert!(ret == errSecSuccess);
            Box::<Connection<S>>::from_raw(conn as *mut _);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = '/home/yechan/.cargo/registry/src/github.com-1ecc6299db9ec823/core-foundation-0.7.0/src/lib.rs:65:9: 69:10'
source = '''
impl Drop for $ty {
            fn drop(&mut self) {
                unsafe { $crate::base::CFRelease(self.as_CFTypeRef()) }
            }
        }'''
