[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/loop.rs:279:1: 289:2'
source = '''
impl Drop for Loop {
    fn drop(&mut self) {
        if self.should_drop {
            if !self.handle.is_null() {
                self.free_data();
                unsafe { uv_loop_delete(self.handle) };
            }
            self.handle = std::ptr::null_mut();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/shared_libs.rs:89:1: 94:2'
source = '''
impl Drop for DLib {
    fn drop(&mut self) {
        let layout = std::alloc::Layout::new::<uv_lib_t>();
        unsafe { std::alloc::dealloc(self.lib as _, layout) };
    }
}'''
