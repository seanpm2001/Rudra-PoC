[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/btree_cache.rs:91:1: 101:2'
source = '''
impl<'f, I, O, V> Drop for BTreeCache<'f, I, O, V>
where
	I: Ord,
{
	fn drop(&mut self) {
		#[allow(unused_must_use)]
		unsafe {
			Box::from_raw(self.f);
		}
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/hash_cache.rs:120:1: 130:2'
source = '''
impl<'f, I, O, S> Drop for HashCache<'f, I, O, S>
where
	I: Eq + Hash,
{
	fn drop(&mut self) {
		#[allow(unused_must_use)]
		unsafe {
			Box::from_raw(self.f);
		}
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/vec_cache.rs:83:1: 91:2'
source = '''
impl<'f, O> Drop for VecCache<'f, O>
{
	fn drop(&mut self) {
		#[allow(unused_must_use)]
		unsafe {
			Box::from_raw(self.f);
		}
	}
}'''
