[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/graphics/mod.rs:135:1: 143:2'
source = '''
impl Drop for GraphicsEffect {
    fn drop(&mut self) {
        unsafe {
            obs_enter_graphics();
            gs_effect_destroy(self.raw);
            obs_leave_graphics();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/graphics/mod.rs:349:1: 357:2'
source = '''
impl Drop for GraphicsSamplerState {
    fn drop(&mut self) {
        unsafe {
            obs_enter_graphics();
            gs_samplerstate_destroy(self.raw);
            obs_leave_graphics();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/module.rs:36:1: 44:2'
source = '''
impl Drop for LoadContext {
    fn drop(&mut self) {
        unsafe {
            for pointer in self.sources.drain(..) {
                drop(Box::from_raw(pointer))
            }
        }
    }
}'''
