[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/cache.rs:20:1: 44:2'
source = '''
impl Drop for Cache {
    fn drop(&mut self) {
        if self.cache_head.get().is_null() {
            return;
        }

        let mut all_ptrs = Vec::new();
        all_ptrs.push(self.cache_head.get());

        let mut cur_node = unsafe { &*self.cache_head.get() };

        loop {
            if cur_node.next.is_null() {
                break;
            }

            all_ptrs.push(cur_node.next);
            cur_node = unsafe { &*cur_node.next };
        }

        for ptr in all_ptrs {
            unsafe { Box::from_raw(ptr); }
        }
    }
}'''
