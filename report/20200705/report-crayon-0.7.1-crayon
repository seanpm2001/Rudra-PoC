[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/utils/object_pool.rs:164:1: 174:2'
source = '''
impl<H: HandleLike, T: Sized> Drop for ObjectPool<H, T> {
    fn drop(&mut self) {
        unsafe {
            for v in &self.handles {
                ::std::ptr::drop_in_place(&mut self.entries[v.index() as usize]);
            }

            self.entries.set_len(0);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/application/engine.rs:35:1: 47:2'
source = '''
impl Drop for EngineSystem {
    fn drop(&mut self) {
        crate::window::detach(self.events);

        unsafe {
            crate::res::discard();
            crate::input::discard();
            crate::video::discard();
            crate::window::discard();
            crate::sched::discard();
        }
    }
}'''
