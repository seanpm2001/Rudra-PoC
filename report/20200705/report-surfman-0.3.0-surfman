[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/platform/generic/egl/context.rs:72:1: 85:2'
source = '''
impl Drop for CurrentContextGuard {
    fn drop(&mut self) {
        EGL_FUNCTIONS.with(|egl| {
            unsafe {
                if self.egl_display != egl::NO_DISPLAY {
                    egl.MakeCurrent(self.egl_display,
                                    self.old_egl_draw_surface,
                                    self.old_egl_read_surface,
                                    self.old_egl_context);
                }
            }
        })
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/platform/unix/wayland/connection.rs:211:1: 219:2'
source = '''
impl Drop for NativeConnectionWrapper {
    fn drop(&mut self) {
        unsafe {
            if let Some(wayland_display) = self.wayland_display {
                (WAYLAND_CLIENT_HANDLE.wl_display_disconnect)(wayland_display);
            }
        }
    }
}'''
