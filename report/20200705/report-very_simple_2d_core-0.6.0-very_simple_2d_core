[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/vbo.rs:10:1: 16:2'
source = '''
impl<V> Drop for StaticBuffer<V> {
    fn drop(&mut self) {
        unsafe {
            gl::DeleteBuffers(1, &self.vbo);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/vbo.rs:58:1: 65:2'
source = '''
impl<V> Drop for GrowableBuffer<V> {
    fn drop(&mut self) {
        //TODO make sure this is ok to do
        unsafe {
            gl::DeleteBuffers(1, &self.vbo);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/circle_program.rs:222:1: 230:2'
source = '''
impl Drop for CircleProgram {
    fn drop(&mut self) {
        // Cleanup
        unsafe {
            gl::DeleteProgram(self.program);
            gl_ok!();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sprite_program.rs:316:1: 324:2'
source = '''
impl Drop for SpriteProgram {
    fn drop(&mut self) {
        // Cleanup
        unsafe {
            gl::DeleteProgram(self.program);
            gl_ok!();
        }
    }
}'''
