[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/z3.rs:62:1: 69:2'
source = '''
impl Drop for Z3Sort {
    fn drop(&mut self) {
        unsafe {
            mutex!();
            Z3_dec_ref(self.context, Z3_sort_to_ast(self.context, self.sort));
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/z3.rs:116:1: 123:2'
source = '''
impl Drop for Z3UninterpretedFunction {
    fn drop(&mut self) {
        unsafe {
            mutex!();
            Z3_dec_ref(self.context, Z3_func_decl_to_ast(self.context, self.decl));
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/z3.rs:175:1: 182:2'
source = '''
impl Drop for Z3Term {
    fn drop(&mut self) {
        unsafe {
            mutex!();
            Z3_dec_ref(self.context, self.ast);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/z3.rs:256:1: 269:2'
source = '''
impl Drop for Z3Solver {
    fn drop(&mut self) {
        unsafe {
            self.record_map.clear();
            mutex!();
            if let Some(m) = self.model {
                Z3_model_dec_ref(self.context, m);
            }
            Z3_solver_dec_ref(self.context, self.solver);
            Z3_del_context(self.context);
            Z3_del_config(self.config);
        }
    }
}'''
