[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sys/unix/net.rs:590:1: 597:2'
source = '''
impl Drop for Socket {
    fn drop(&mut self) {
        if self.socket == INVALID_SOCKET || self.is_close() {
            return;
        }
        let _ = unsafe { libc::close(self.socket) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sys_common/net.rs:160:1: 164:2'
source = '''
impl Drop for LookupHost {
    fn drop(&mut self) {
        unsafe { c::freeaddrinfo(self.original) }
    }
}'''
