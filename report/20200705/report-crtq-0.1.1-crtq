[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:494:1: 503:2'
source = '''
impl<T> Drop for Queue<T> {
    fn drop(&mut self) {
        unsafe { BoxMemory.deallocate(self.sentinel); }
        while self.consume(0).is_ok() { }
        for (req, old) in self.deqreq.iter().zip(self.deqold.iter()) {
            unsafe { BoxMemory.deallocate(req.load(Relaxed)); }
            unsafe { BoxMemory.deallocate(old.load(Relaxed)); }
        }
    }
}'''
