[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mpmc/mutex_linked_list.rs:111:1: 122:2'
source = '''
impl<T> Drop for ListInner<T> {
    fn drop(&mut self) {
        unsafe {
            let mut cur = *(self.head.borrow_mut().deref_mut());
            while !cur.is_null() {
                let next = *((*cur).next.borrow_mut().deref_mut());
                let _: Box<Node<T>> = Box::from_raw(cur);
                cur = next
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mpmc/mod.rs:44:1: 50:2'
source = '''
impl<T: Send> Drop for Sender<T> {
    fn drop(&mut self) {
        unsafe {
            (*self.inner.get()).drop_chan();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mpmc/mod.rs:80:1: 86:2'
source = '''
impl<T: Send> Drop for Receiver<T> {
    fn drop(&mut self) {
        unsafe {
            (*self.inner.get()).drop_port();
        }
    }
}'''
