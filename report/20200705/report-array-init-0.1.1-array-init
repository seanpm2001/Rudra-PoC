[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:184:5: 199:6'
source = '''
impl<Item> Drop for UnsafeDropSliceGuard<Item> {
        fn drop (self: &'_ mut Self)
        {
            unsafe {
                // # Safety
                //
                //   - the contract of the struct guarantees that this is sound
                ptr::drop_in_place(
                    slice::from_raw_parts_mut(
                        self.base_ptr,
                        self.initialized_count,
                    )
                );
            }
        }
    }'''
