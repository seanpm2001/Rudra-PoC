[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/potted/tree.rs:99:1: 106:2'
source = '''
impl<T> Drop for Tree<T> {
    fn drop( &mut self ) {
        if self.pot.new_index() != 0 {
            self.root_mut_().drop_all_data_if_needed();
        }
        unsafe{ Pot::drop( self.pot ); }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/potted/forest.rs:466:1: 473:2'
source = '''
impl<T> Drop for Forest<T> {
    fn drop( &mut self ) {
        if !self.pot.is_empty() {
            self.iter_mut().for_each( |node| unsafe{ Pin::get_unchecked_mut( node ).drop_all_data_if_needed() });
        }
        unsafe{ Pot::drop( self.pot ); }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/potted/node.rs:763:1: 771:2'
source = '''
impl<'a,T,Iter> Drop for MovedNodes<'a,T,Iter>
    where Iter : Iterator<Item=Visit<&'a T>>
        , T    : 'a
{
    fn drop( &mut self ) {
        for _ in self.by_ref() {}
        unsafe{ Pot::drop( self.pot ); }
    }
}'''
