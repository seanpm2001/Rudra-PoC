[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/library.rs:165:1: 169:2'
source = '''
impl<'a> Drop for Library<'a> {
    fn drop(&mut self) {
        unsafe { ffi::ass_library_done(self.handle.as_ptr()) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/track.rs:98:1: 102:2'
source = '''
impl<'library> Drop for Track<'library> {
    fn drop(&mut self) {
        unsafe { ffi::ass_free_track(self.handle.as_ptr()) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/track.rs:109:1: 113:2'
source = '''
impl<'track> Drop for Style<'track> {
    fn drop(&mut self) {
        unsafe { ffi::ass_free_style(self.parent.handle.as_ptr(), self.id) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/track.rs:120:1: 124:2'
source = '''
impl<'track> Drop for Event<'track> {
    fn drop(&mut self) {
        unsafe { ffi::ass_free_event(self.parent.handle.as_ptr(), self.id) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/renderer.rs:206:1: 210:2'
source = '''
impl<'library> Drop for Renderer<'library> {
    fn drop(&mut self) {
        unsafe { ffi::ass_renderer_done(self.handle.as_ptr()) }
    }
}'''
