[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/buf.rs:25:1: 31:2'
source = '''
impl Drop for Guard<'_> {
    fn drop(&mut self) {
        unsafe {
            self.vec.set_len(self.len);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/channel.rs:78:1: 85:2'
source = '''
impl Drop for Connection {
    fn drop(&mut self) {
        let _e = self.unmount();
        unsafe {
            libc::close(self.fd);
        }
    }
}'''
