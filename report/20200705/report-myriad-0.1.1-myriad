[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mpmc/queue.rs:87:1: 103:2'
source = '''
impl<T> Drop for Queue<T> {
    fn drop(&mut self) {
        unsafe {
            let head = self.head.swap(ptr::null_mut(), SeqCst);
            if !head.is_null() {
                let mut node = Box::from_raw(head);
                loop {
                    if !node.next.is_null() {
                        node = Box::from_raw(node.next);
                    } else {
                        break;
                    }
                }
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mpmc/stack.rs:75:1: 91:2'
source = '''
impl<T> Drop for Stack<T> {
    fn drop(&mut self) {
        unsafe {
            let head = self.head.swap(ptr::null_mut(), SeqCst);
            if !head.is_null() {
                let mut node = Box::from_raw(head);
                loop {
                    if !node.next.is_null() {
                        node = Box::from_raw(node.next);
                    } else {
                        break;
                    }
                }
            }
        }
    }
}'''
