[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:608:1: 622:2'
source = '''
impl Drop for Trainer {
    fn drop(&mut self) {
        unsafe {
            if !self.data.is_null() {
                self.clear().unwrap();
                libc::free(self.data as *mut _);
                self.data = ptr::null_mut();
            }
            if !self.trainer.is_null() {
                (*self.trainer).release.map(|f| f(self.trainer)).unwrap();
                self.trainer = ptr::null_mut();
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:811:1: 817:2'
source = '''
impl<'a> Drop for Tagger<'a> {
    fn drop(&mut self) {
        unsafe {
            (*self.tagger).release.map(|f| f(self.tagger)).unwrap();
        }
    }
}'''
