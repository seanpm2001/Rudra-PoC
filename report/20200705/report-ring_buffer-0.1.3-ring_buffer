[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:962:1: 975:2'
source = '''
impl<T> Drop for RingBuffer<T> {
    fn drop(&mut self) {
        while !self.is_empty() {
            self.pop();
        }

        if size_of::<T>() > 0 {
            unsafe {
                dealloc(self.memory.as_ptr() as *mut u8, Layout::from_size_align_unchecked(
                    self.capacity * size_of::<T>(), align_of::<T>()))
            }
        }
    }
}'''
