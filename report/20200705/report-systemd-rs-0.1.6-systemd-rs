[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/login/monitor.rs:37:1: 54:2'
source = '''
impl Drop for Monitor {
    fn drop(&mut self) {
        if let Some(handle) = self.handle.take() {
            unsafe {
                libc::write(self.pipe_fds[1], [0x0A].as_ptr() as *const c_void, 1);
            }
            let _ = handle.join();
        }

        for fd in self.pipe_fds.iter() {
            if *fd > -1 {
                unsafe {
                    libc::close(*fd);
                }
            }
        }
    }
}'''
