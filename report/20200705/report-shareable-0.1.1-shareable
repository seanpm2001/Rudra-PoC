[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/shared_object.rs:107:1: 117:2'
source = '''
impl<T> Drop for Data<T>
{
    //*********************************************************************************************
    /// When we drop, we need to grab the object in the atomic pointer and free it.
    fn drop(&mut self)
    {
        unsafe {
            Box::from_raw(self.data.swap(ptr::null_mut(), Ordering::Acquire));
        }
    }
}'''
