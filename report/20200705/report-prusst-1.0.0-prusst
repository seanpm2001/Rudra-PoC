[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:805:1: 811:2'
source = '''
impl Drop for SyncFile {
    fn drop(&mut self) {
        unsafe {
            libc::close(self.fd);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:842:1: 848:2'
source = '''
impl Drop for MemMap {
    fn drop(&mut self) {
        unsafe {
            libc::munmap(self.base as *mut libc::c_void, self.size as libc::size_t);
        }
    }
}'''
