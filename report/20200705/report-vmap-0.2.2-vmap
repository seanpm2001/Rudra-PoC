[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/map.rs:644:1: 651:2'
source = '''
impl Drop for MapMut {
    fn drop(&mut self) {
        unsafe {
            let (ptr, len) = AllocSize::new().bounds(self.ptr, self.len);
            unmap(ptr, len).unwrap_or_default();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/io/ring.rs:74:1: 78:2'
source = '''
impl Drop for Ring {
    fn drop(&mut self) {
        unsafe { unmap_ring(self.ptr, self.len) }.unwrap_or_default();
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/io/ring.rs:203:1: 207:2'
source = '''
impl Drop for InfiniteRing {
    fn drop(&mut self) {
        unsafe { unmap_ring(self.ptr, self.len) }.unwrap_or_default()
    }
}'''
