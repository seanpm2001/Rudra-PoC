[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:228:1: 241:2'
source = '''
impl Drop for System {
	fn drop(&mut self) {
		unsafe {
			// Finelize EGL.
			if self.egl_display != ffi::EGL_NO_DISPLAY {
				assert!((self.lib_egl.eglTerminate)(self.egl_display) != 0);
				self.egl_display = ffi::EGL_NO_DISPLAY;
			}
			// Finalize 
			(self.lib_bcm_host.bcm_host_deinit)();
		}
		//SYSTEM_SINGLETON_GUARD.store(false, Ordering::Release);
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:379:1: 405:2'
source = '''
impl<S> Drop for Window<S> where S: Deref<Target=System> {
	fn drop(&mut self) {
		let _ = self.system.mutex.lock();
		unsafe {
			if self.egl_surface != ffi::EGL_NO_SURFACE {
				assert!((self.system.lib_egl.eglMakeCurrent)(self.system.egl_display, ffi::EGL_NO_SURFACE, ffi::EGL_NO_SURFACE, ffi::EGL_NO_CONTEXT) != 0);
				assert!((self.system.lib_egl.eglDestroySurface)(self.system.egl_display, self.egl_surface) != 0);
				self.egl_surface = ffi::EGL_NO_SURFACE;
			}
			if self.egl_dispmanx_window.element != ffi::DISPMANX_NO_HANDLE {
				let update = (self.system.lib_bcm_host.vc_dispmanx_update_start)(0);
				assert!(update != ffi::DISPMANX_NO_HANDLE);
				assert!((self.system.lib_bcm_host.vc_dispmanx_element_remove)(update, self.egl_dispmanx_window.element) == ffi::DISPMANX_SUCCESS);
				assert!((self.system.lib_bcm_host.vc_dispmanx_update_submit_sync)(update) == ffi::DISPMANX_SUCCESS);
				self.egl_dispmanx_window.element = ffi::DISPMANX_NO_HANDLE;
			}
			if self.dispmanx_display != ffi::DISPMANX_NO_HANDLE {
				assert!((self.system.lib_bcm_host.vc_dispmanx_display_close)(self.dispmanx_display) == ffi::DISPMANX_SUCCESS);
				self.dispmanx_display = ffi::DISPMANX_NO_HANDLE;
			}
			if self.egl_context != ffi::EGL_NO_CONTEXT {
				assert!((self.system.lib_egl.eglDestroyContext)(self.system.egl_display, self.egl_context) != 0);
				self.egl_context = ffi::EGL_NO_CONTEXT;
			}
		}
	}
}'''
