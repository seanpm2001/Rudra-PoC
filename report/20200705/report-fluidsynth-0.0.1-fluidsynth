[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/modulator.rs:120:1: 126:2'
source = '''
impl Drop for Modulator {
    fn drop(&mut self) -> () {
        unsafe {
            fluid_mod_delete(self.c_fluid_mod);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/settings.rs:284:1: 290:2'
source = '''
impl Drop for Settings {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_settings(self.c_fluid_settings)
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/synth.rs:632:1: 638:2'
source = '''
impl Drop for Synth {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_synth(self.c_fluid_synth);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/audio.rs:29:1: 35:2'
source = '''
impl Drop for AudioDriver {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_audio_driver(self.c_fluid_audio_driver); 
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/audio.rs:62:1: 68:2'
source = '''
impl Drop for FileRenderer {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_file_renderer(self.c_fluid_file_renderer); 
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/midi.rs:59:1: 65:2'
source = '''
impl Drop for MidiRouter {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_midi_router(self.c_fluid_midi_router);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/midi.rs:132:1: 138:2'
source = '''
impl Drop for MidiRouterRule {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_midi_router_rule(self.c_fluid_midi_router_rule);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/midi.rs:173:1: 179:2'
source = '''
impl Drop for MidiDriver {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_midi_driver(self.c_fluid_midi_driver);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/midi.rs:307:1: 313:2'
source = '''
impl Drop for MidiEvent {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_midi_event(self.c_fluid_midi_event);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/midi.rs:385:1: 391:2'
source = '''
impl Drop for Player {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_player(self.c_fluid_player);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/event.rs:287:1: 293:2'
source = '''
impl Drop for Event {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_event(self.to_raw()); 
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/seq.rs:147:1: 153:2'
source = '''
impl Drop for Sequencer {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_sequencer(self.c_fluid_sequencer); 
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/ramsfont.rs:91:1: 97:2'
source = '''
impl Drop for RAMSample {
    fn drop(&mut self) -> () {
        unsafe {
            delete_fluid_ramsample(self.to_raw()); 
        }
    }
}'''
