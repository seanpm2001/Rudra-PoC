[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/debug/messenger/mod.rs:245:1: 262:2'
source = '''
impl<T> Drop for Messenger<T>
where
    T: Connection,
{
    fn drop(&mut self) {
        unsafe {
            let destroyer = Self::command_destroy_messenger(&self.connection).unwrap();
            let result = self
                .connection
                .bind_instance(|vkinstance| destroyer(vkinstance, self.inner, ptr::null()));

            if let Code::Success = result {
            } else {
                eprintln!("{}", result)
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/instance/mod.rs:184:1: 188:2'
source = '''
impl Drop for Instance {
    fn drop(&mut self) {
        unsafe { vkDestroyInstance(self.inner, ptr::null()) }
    }
}'''
