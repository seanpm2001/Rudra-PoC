[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/pointer.rs:106:1: 111:2'
source = '''
impl<T: ?Sized> Drop for Pointer<T> {
    fn drop(&mut self) {
        // Safe because vtable must always be a &'static
        unsafe { (self.vtable.as_ref().drop)(self.ptr) }
    }
}'''
