[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/uorb/publish.rs:130:1: 137:2'
source = '''
impl<T> Drop for Publisher<T> {
	fn drop(&mut self) {
		let handle = self.raw_handle();
		if handle != 0 {
			unsafe { c::orb_unadvertise(handle) };
		}
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/uorb/subscribe.rs:63:1: 67:2'
source = '''
impl<T> Drop for Subscription<T> {
	fn drop(&mut self) {
		unsafe { c::orb_unsubscribe(self.handle) };
	}
}'''
