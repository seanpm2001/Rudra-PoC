[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/handle.rs:157:1: 176:2'
source = '''
impl Drop for Handle {
    #[inline]
    fn drop(&mut self) {
        if self.is_inline() {
            return;
        }

        let mut rc = self.get_rc();

        if Rc::strong_count(&rc) == 2 {
            POOL.with(|pool| {
                pool.borrow_mut().remove(&*rc);
            });
        }

        unsafe {
            mem::ManuallyDrop::drop(&mut rc);
        }
    }
}'''
