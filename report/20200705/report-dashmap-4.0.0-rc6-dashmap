[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/spec/x86_64/mod.rs:587:1: 599:2'
source = '''
impl<K, V, S> Drop for Table<K, V, S> {
    fn drop(&mut self) {
        // # Safety
        // This is safe as long as the bucket array this points to is valid.
        // That is always the case since it is never set to an invalid state.
        unsafe {
            let array = self.array.load(Ordering::Acquire);
            if !array.is_null() {
                ptr::drop_in_place(array);
            }
        }
    }
}'''
