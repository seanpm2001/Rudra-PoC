[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/memory_pool.rs:48:1: 55:2'
source = '''
impl Drop for MemoryPool {
    fn drop( &mut self ) {
        for &(ptr, capacity) in self.buffers.iter() {
            let vector = unsafe { Vec::from_raw_parts( ptr, 0, capacity ) };
            mem::drop( vector );
        }
    }
}'''
