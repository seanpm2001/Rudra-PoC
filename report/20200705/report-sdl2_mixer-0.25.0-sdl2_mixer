[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sdl2_mixer/lib.rs:146:1: 152:2'
source = '''
impl Drop for Sdl2MixerContext {
    fn drop(&mut self) {
        unsafe {
            ffi::Mix_Quit();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sdl2_mixer/lib.rs:236:1: 242:2'
source = '''
impl Drop for Chunk {
    fn drop(&mut self) {
        if self.owned {
            unsafe { ffi::Mix_FreeChunk(self.raw) }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sdl2_mixer/lib.rs:740:1: 746:2'
source = '''
impl Drop for Music {
    fn drop(&mut self) {
        if self.owned {
            unsafe { ffi::Mix_FreeMusic(self.raw) };
        }
    }
}'''
