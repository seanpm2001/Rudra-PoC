[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/sync.rs:131:1: 149:2'
source = '''
impl<W> Drop for WholeRef<W>
where
    W: ?Sized,
{
    #[inline]
    fn drop(&mut self) {
        unsafe {
            if self
                .0
                .as_ref()
                .should_drop_value
                .swap(true, Ordering::Release)
            {
                atomic::fence(Ordering::Acquire);
                drop(Box::from_raw(self.0.as_ptr()));
            }
        }
    }
}'''
