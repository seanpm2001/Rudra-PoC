[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/changelistener.rs:100:1: 116:2'
source = '''
impl Drop for VirtualDesktopChangeListener {
    fn drop(&mut self) {
        match self.service.take() {
            Some(s) => {
                if self.cookie.get() != 0 {
                    unsafe {
                        #[cfg(feature = "debug")]
                        println!("Unregister a listener {:?}", self.cookie.get());

                        s.unregister(self.cookie.get());
                    }
                }
            }
            None => {}
        }
    }
}'''
