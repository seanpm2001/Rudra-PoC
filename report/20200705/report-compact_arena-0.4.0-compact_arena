[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:473:1: 480:2'
source = '''
impl<'tag, T> Drop for TinyArena<'tag, T> {
    // dropping the arena drops all values
    fn drop(&mut self) {
        for i in 0..mem::replace(&mut self.len, 0) as usize {
            unsafe { ptr::drop_in_place(self.data[i].as_mut_ptr()); }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:528:1: 535:2'
source = '''
impl<'tag, T> Drop for NanoArena<'tag, T> {
    // dropping the arena drops all values
    fn drop(&mut self) {
        for i in 0..mem::replace(&mut self.len, 0) as usize {
            unsafe { ptr::drop_in_place(self.data[i].as_mut_ptr()); }
        }
    }
}'''
