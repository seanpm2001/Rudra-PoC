[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:169:1: 182:2'
source = '''
impl Drop for Termfest {
    fn drop(&mut self) {
        // ignore errors in drop
        if let Ok(mut ttyout) = self.ttyout.lock() {
            let _ = self.terminal.show_cursor(&mut *ttyout);
            let _ = self.terminal.exit_keypad(&mut *ttyout);
            let _ = self.terminal.exit_ca(&mut *ttyout);
            let _ = self.terminal.reset_attr(&mut *ttyout);
            unsafe {
                libc::tcsetattr(self.ttyout_fd, libc::TCSANOW, &self.orig_tios);
            }
        }
    }
}'''
