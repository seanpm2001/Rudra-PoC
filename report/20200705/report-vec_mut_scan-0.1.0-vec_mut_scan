[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:62:1: 74:2'
source = '''
impl<'a, T: 'a> Drop for VecMutScan<'a, T> {
    fn drop(&mut self) {
        unsafe {
            let tail_len = self.end - self.read;
            ptr::copy(
                self.base.add(self.read),
                self.base.add(self.write),
                tail_len,
            );
            self.vec.set_len(self.write + tail_len);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:123:1: 135:2'
source = '''
impl<'s, 'a, T: 'a> Drop for VecMutScanItem<'s, 'a, T> {
    fn drop(&mut self) {
        unsafe {
            ptr::copy(
                self.scan.base.add(self.scan.read),
                self.scan.base.add(self.scan.write),
                1,
            );
            self.scan.read += 1;
            self.scan.write += 1;
        }
    }
}'''
