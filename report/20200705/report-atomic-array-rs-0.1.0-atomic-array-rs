[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/option_ref_array.rs:83:1: 96:2'
source = '''
impl<T> Drop for AtomicOptionRefArray<T> {
    fn drop(&mut self) {
        for value in self.buf.iter() {
            let value = value.swap(null_mut(), Ordering::SeqCst);
            if !value.is_null() {
                unsafe {
                    // Reconstruct the Arc from the raw ptr which will trigger our destructor
                    // if there is one
                    let _ = Arc::from_raw(value);
                }
            }
        }
    }
}'''
