[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/manager.rs:31:1: 41:2'
source = '''
impl Drop for Manager {
	fn drop(&mut self) {
		let status = unsafe { hid_exit() };

		if status != 0 {
			panic!("hid_exit() failed");
		}

		INITIALIZED.store(false, Ordering::Relaxed);
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/devices.rs:45:1: 51:2'
source = '''
impl<'a> Drop for Devices<'a> {
	fn drop(&mut self) {
		unsafe {
			hid_free_enumeration(self.ptr);
		}
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/handle.rs:218:1: 224:2'
source = '''
impl Drop for Handle {
	fn drop(&mut self) {
		unsafe {
			hid_close(self.as_mut_ptr());
		}
	}
}'''
