[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/specdesc.rs:149:1: 153:2'
source = '''
impl Drop for SpecDesc {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_specdesc(self.specdesc) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/fft.rs:31:1: 35:2'
source = '''
impl Drop for FFT {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_fft(self.fft); }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/pvoc.rs:24:1: 28:2'
source = '''
impl Drop for PVoc {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_pvoc(self.pvoc); }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/onset.rs:168:1: 172:2'
source = '''
impl Drop for Onset {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_onset(self.onset) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/pitch.rs:223:1: 227:2'
source = '''
impl Drop for Pitch {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_pitch(self.pitch) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/tempo.rs:23:1: 27:2'
source = '''
impl Drop for Tempo {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_tempo(self.tempo) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/notes.rs:46:1: 50:2'
source = '''
impl Drop for Notes {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_notes(self.notes) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mfcc.rs:30:1: 34:2'
source = '''
impl Drop for MFCC {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_mfcc(self.mfcc) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/resampler.rs:83:1: 87:2'
source = '''
impl Drop for Resampler {
    fn drop(&mut self) {
        unsafe { ffi::del_aubio_resampler(self.resampler) }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/log.rs:129:1: 133:2'
source = '''
impl Drop for Log {
    fn drop(&mut self) {
        unsafe { ffi::aubio_log_reset(); }
    }
}'''
