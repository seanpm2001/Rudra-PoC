[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/utils/redis/locking.rs:21:1: 36:2'
source = '''
impl Drop for LockGuard {
    fn drop(&mut self) {
        let key = self.key.clone();
        let request = self.request.clone();
        let mut conn = self.conn.clone();
        let unlock_script = self.unlock_script.clone();
        tokio::spawn(async move {
            let mut invocation = unlock_script.prepare_invoke();
            invocation.key(key.clone()).arg(&request[..]);
            let res: RedisResult<Value> = invocation.invoke_async(&mut conn).await;
            if let Err(err) = res {
                log::error!("Failed to release Redis lock: {:?}", err);
            }
        });
    }
}'''
