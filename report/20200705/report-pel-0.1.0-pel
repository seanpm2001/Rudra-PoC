[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/gpu/program.rs:87:1: 93:2'
source = '''
impl Drop for Program {
    fn drop(&mut self) {
        unsafe {
            glDeleteProgram(self.id);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/gpu/shader.rs:61:1: 67:2'
source = '''
impl Drop for Shader {
    fn drop(&mut self) {
        unsafe {
            glDeleteShader(self.id);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/gpu/texture.rs:102:1: 110:2'
source = '''
impl Drop for Texture {
    fn drop(&mut self) {
        unsafe {
            glDeleteVertexArrays(1, &self.vao);
            glDeleteBuffers(1, &self.vbo);
            glDeleteTextures(1, &self.tex);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/gpu/texture.rs:150:1: 160:2'
source = '''
impl<'s> Drop for TextureHandle<'s> {
    fn drop(&mut self) {
        unsafe {
            update_texture(
                self.inner.width() as GLsizei,
                self.inner.height() as GLsizei,
                self.inner.as_ptr() as *const GLvoid,
            );
        }
    }
}'''
