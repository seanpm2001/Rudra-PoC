[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:621:1: 628:2'
source = '''
impl<T: MutexProtected + ?Sized> Drop for Mutex<T> {
    fn drop(&mut self) {
        unsafe {
            let wrapper: &T = &*self.__wrapper.get();
            wrapper.get_mutex().destroy();
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:866:1: 872:2'
source = '''
impl<'a, T: MutexProtected + ?Sized + 'a> Drop for MutexGuard<'a, T> {
    fn drop(&mut self) {
        unsafe {
            self.__wrapper.get_mutex().unlock();
        }
    }
}'''
