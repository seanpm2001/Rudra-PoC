[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/anchor.rs:49:1: 57:2'
source = '''
unsafe impl<#[may_dangle] T> Drop for StackAnchor<T> {
    fn drop(&mut self) {
        unsafe {
            if self.is_some {
                ManuallyDrop::drop(&mut self.content);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/anchor.rs:101:1: 109:2'
source = '''
unsafe impl<#[may_dangle] T: ?Sized> Drop for BoxAnchor<T> {
    fn drop(&mut self) {
        unsafe {
            if self.is_some {
                ManuallyDrop::drop(&mut self.content);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:176:1: 182:2'
source = '''
unsafe impl<'a, #[may_dangle] T: ?Sized + 'a> Drop for RefMove<'a, T> {
    fn drop(&mut self) {
        unsafe {
            drop_in_place(self.ptr.as_ptr());
        }
    }
}'''
