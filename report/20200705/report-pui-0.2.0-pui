[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/runtime.rs:215:1: 225:2'
source = '''
impl<C, P: PoolMut<C>> Drop for Runtime<C, P> {
    #[inline]
    fn drop(&mut self) {
        // # Safety
        //
        // here `C: Counter` -> `C: Copy` (because we only construct such `C`)
        let _ = self
            .pool
            .try_put_mut(RuntimeId(unsafe { core::ptr::read(&self.id) }));
    }
}'''
