[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:131:1: 150:2'
source = '''
impl Drop for RawInstance {
    fn drop(&mut self) {
        unsafe {
            #[cfg(debug_assertions)]
            {
                match self.debug_messenger {
                    Some(DebugMessenger::Utils(ref ext, callback)) => {
                        ext.destroy_debug_utils_messenger(callback, None)
                    }
                    Some(DebugMessenger::Report(ref ext, callback)) => {
                        ext.destroy_debug_report_callback(callback, None)
                    }
                    None => {}
                }
            }

            self.inner.destroy_instance(None);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:1334:1: 1340:2'
source = '''
impl Drop for RawDevice {
    fn drop(&mut self) {
        unsafe {
            self.raw.destroy_device(None);
        }
    }
}'''
