[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/ExecutableAnonymousMemoryMap.rs:14:1: 21:2'
source = '''
impl Drop for ExecutableAnonymousMemoryMap
{
	#[inline(always)]
	fn drop(&mut self)
	{
		unsafe { munmap(self.address as *mut _, self.length) };
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/LabelledLocations.rs:15:1: 22:2'
source = '''
impl Drop for LabelledLocations
{
	#[inline(always)]
	fn drop(&mut self)
	{
		unsafe { dealloc(self.mut_u8_pointer(), self.layout) }
	}
}'''
