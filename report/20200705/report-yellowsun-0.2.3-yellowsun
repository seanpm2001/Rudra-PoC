[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/mmap.rs:78:1: 89:2'
source = '''
impl<T> Drop for Mmap<T> {
    fn drop(&mut self) {
        unsafe {
            match self.typ {
                Type::Mmap => {
                    libc::munmap(self.ptr.as_ptr() as *mut c_void, size_of::<T>());
                }
                Type::Malloc => libc::free(self.ptr.as_ptr() as *mut c_void),
            }
        }
    }
}'''
