[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:478:1: 485:2'
source = '''
impl<K: Eq + Hash + Sync + Clone, V: Sync + Clone> Drop for CHMSegment<K, V> {
    fn drop(&mut self) {
        let lock_guard = self.lock.lock().expect("Couldn't lock segment mutex");
        let guard = epoch::pin();
        unsafe {Self::destroy_table(self.table.load(Relaxed, &guard).unwrap(), &guard) };
        drop(lock_guard);
    }
}'''
