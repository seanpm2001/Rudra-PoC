[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/context.rs:148:1: 156:2'
source = '''
impl Drop for Context {
    fn drop(&mut self) {
        if self.owner {
            unsafe {
                ffi::lua_close(self.handle)
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/borrow.rs:14:1: 20:2'
source = '''
impl<'a> Drop for LuaRef<'a> {
    fn drop(&mut self) {
        unsafe {
            ffi::luaL_unref(self.cxt.handle, ffi::LUA_REGISTRYINDEX, self.key)
        }
    }
}'''
