[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/masks/BitMask.rs:8:1: 20:2'
source = '''
impl Drop for BitMask
{
	#[allow(trivial_casts)]
	#[inline(always)]
	fn drop(&mut self)
	{
		if unsafe { *self.0 }.maskp as c_ulong == 0xdeadcdef as c_ulong
		{
			return;
		}
		unsafe { numa_bitmask_free(self.0) }
	}
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/memories/NumaMemory.rs:60:1: 72:2'
source = '''
impl Drop for NumaMemory
{
	#[inline(always)]
	fn drop(&mut self)
	{
		if self.is_null()
		{
			return
		}
		unsafe { numa_free(self.0, self.1) };
		self.0 = null_mut();
	}
}'''
