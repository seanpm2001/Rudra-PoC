[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/lib.rs:66:1: 71:2'
source = '''
impl<T> Drop for AtomicBox<T> {
    fn drop(&mut self) {
        // let bound ensures that we are unboxing the right ptr
        let _: Box<Arc<T>> = unsafe { Box::from_raw(*self.ptr.get_mut()) };
    }
}'''
