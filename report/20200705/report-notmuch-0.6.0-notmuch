[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/database.rs:57:1: 61:2'
source = '''
impl Drop for Database {
    fn drop(&mut self) {
        unsafe { ffi::notmuch_database_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/directory.rs:17:1: 21:2'
source = '''
impl<'d> Drop for Directory<'d> {
    fn drop(&mut self) {
        unsafe { ffi::notmuch_directory_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/filenames.rs:20:1: 27:2'
source = '''
impl<'o, O> Drop for Filenames<'o, O>
where
    O: FilenamesOwner + 'o,
{
    fn drop(self: &mut Self) {
        unsafe { ffi::notmuch_filenames_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/query.rs:23:1: 27:2'
source = '''
impl<'d> Drop for Query<'d> {
    fn drop(&mut self) {
        unsafe { ffi::notmuch_query_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/tags.rs:19:1: 26:2'
source = '''
impl<'o, O> Drop for Tags<'o, O>
where
    O: TagsOwner + 'o,
{
    fn drop(&mut self) {
        unsafe { ffi::notmuch_tags_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/thread.rs:21:1: 28:2'
source = '''
impl<'d, 'q> Drop for Thread<'d, 'q>
where
    'd: 'q
{
    fn drop(&mut self) {
        unsafe { ffi::notmuch_thread_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/threads.rs:18:1: 25:2'
source = '''
impl<'d, 'q> Drop for Threads<'d, 'q>
where
    'd: 'q,
{
    fn drop(&mut self) {
        unsafe { ffi::notmuch_threads_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/index.rs:16:1: 20:2'
source = '''
impl<'d> Drop for IndexOpts<'d> {
    fn drop(&mut self) {
        unsafe { ffi::notmuch_indexopts_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/config_list.rs:14:1: 18:2'
source = '''
impl<'d> Drop for ConfigList<'d> {
    fn drop(&mut self) {
        unsafe { ffi::notmuch_config_list_destroy(self.ptr) };
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/message_properties.rs:19:1: 26:2'
source = '''
impl<'m, 'o, O> Drop for MessageProperties<'m, 'o, O>
where
    O: MessageOwner + 'o
{
    fn drop(&mut self) {
        unsafe { ffi::notmuch_message_properties_destroy(self.ptr) };
    }
}'''
