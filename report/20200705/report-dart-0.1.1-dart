[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/dart_types/list.rs:387:1: 400:2'
source = '''
impl<'a, T: Clone, L: ListLike<T> + ?Sized> Drop for ListViewMut<'a, T, L> {
    fn drop(&mut self) {
        for (idx, i) in self.cached_items.iter().enumerate() {
            let i = i.get();
            unsafe {
                let item = &*i;
                match item {
                    Item::None | Item::Read(_) => {}
                    Item::PossiblyModified(x) => dart_unwrap!(self.list.set_at(idx + self.start, x.clone())),
                }
            }
        }
    }
}'''
