[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/buffer.rs:105:1: 115:2'
source = '''
impl Drop for Buffer {
    fn drop(&mut self) {
        assert!(!self.buffer.is_null());

        unsafe {
            if self.is_owned && (*self.buffer).unit != 0 {
                hoedown_buffer_free(self.buffer);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/renderer/html.rs:455:1: 459:2'
source = '''
impl Drop for Html {
    fn drop(&mut self) {
        unsafe { hoedown_html_renderer_free(self.renderer); }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/document.rs:62:1: 66:2'
source = '''
impl Drop for Document {
    fn drop(&mut self) {
        unsafe { hoedown_document_free(self.document); }
    }
}'''
