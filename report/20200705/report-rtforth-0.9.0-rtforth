[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/memory.rs:59:1: 65:2'
source = '''
impl Drop for CodeSpace {
    fn drop(&mut self) {
        unsafe {
            System.dealloc(self.inner, self.layout);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/memory.rs:190:1: 196:2'
source = '''
impl Drop for DataSpace {
    fn drop(&mut self) {
        unsafe {
            System.dealloc(self.inner, self.layout);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/memory.rs:476:1: 482:2'
source = '''
impl Drop for StackSpace {
    fn drop(&mut self) {
        unsafe {
            System.dealloc(self.inner, self.layout);
        }
    }
}'''
