[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/skiplist.rs:216:1: 232:2'
source = '''
impl<T: std::cmp::PartialOrd + Clone + NonStandard> Drop for SkipList<T> {
    fn drop(&mut self) {
        let mut now = self.head[0].load(Ordering::SeqCst);
        while unsafe { (*now).get_key() < &T::max() } {
            let now_ptr = now.clone();
            let next_ptr = unsafe { (*now).get_succ().load(Ordering::SeqCst) };

            unsafe {
                drop(Box::from_raw(now_ptr));
            }
            now = next_ptr;
        }
        unsafe {
            drop(Box::from_raw(now));
        }
    }
}'''
