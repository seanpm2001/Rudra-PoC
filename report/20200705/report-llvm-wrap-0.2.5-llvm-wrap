[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/module.rs:144:1: 152:2'
source = '''
impl Drop for Module {
    fn drop(&mut self) {
        if let Some(module) = self.module {
            unsafe {
                LLVMDisposeModule(module);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/builder.rs:791:1: 799:2'
source = '''
impl Drop for Builder {
    fn drop(&mut self) {
        if let Some(builder) = self.builder {
            unsafe {
                LLVMDisposeBuilder(builder);
            }
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/target.rs:266:1: 272:2'
source = '''
impl Drop for TargetMachine {
    fn drop(&mut self) {
        unsafe {
            LLVMDisposeTargetMachine(self.machine);
        }
    }
}'''

[[reports]]
level = 'Warning'
analyzer = 'UnsafeDestructor'
description = 'unsafe block detected in drop'
location = 'src/target.rs:378:1: 384:2'
source = '''
impl Drop for TargetData {
    fn drop(&mut self) {
        unsafe {
            LLVMDisposeTargetData(self.data);
        }
    }
}'''
